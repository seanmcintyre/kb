"use client";

import "./portfolio.css";
import "./p.css";

import { FC, useState } from "react";

import { data } from "../../data/articles";
import { sources } from "@/data/sources";

interface Article {
  title: string;
  date: string;
  source: string;
  href: string;
  image?: string;
}

type sortable = "date" | "title" | "source";

export default function Portfolio() {
  const [sortBy, setSortBy] = useState<sortable>("date");
  const sortedArticles = getSortedArticles(data, sortBy);

  return (
    <div className="portfolio">
      <main>
        <header>
          <h1>Portfolio</h1>
          <input type="search" />
          <div>
            filter by
            <button>source</button>
            <button>year</button>
          </div>
          <div>
            sort by
            <button onClick={() => setSortBy("date")}>date</button>
            <button onClick={() => setSortBy("title")}>title</button>
            <button onClick={() => setSortBy("source")}>
              source
            </button>
          </div>
          <img className="headshot" src="/kb/portfolio.jpg" />
        </header>
        <div key={sortBy}>
          {sortedArticles.map(
            ({ title, date, source, href, image }, i) => (
              <div
                className="article"
                key={i}
                style={{
                  animationDelay: `${Math.log2(i + 1) * 50}ms`,
                  borderColor: sources[source].color,
                }}>
                <h3>
                  <a
                    href={href}
                    target="_blank"
                    rel="noopener noreferrer">
                    {title}
                  </a>
                </h3>
                {/* <span>{source} (add brand logo on right)</span> */}
                <>{logos[source as keyof typeof logos]}</>
                {/* {image && (
                <>
                  <img
                    className="a"
                    src={image}
                    alt={`Featured image for ${title}`}
                    loading="lazy"
                  />
                  <img
                    className="b"
                    src={image}
                    alt={`Featured image for ${title}`}
                    loading="lazy"
                  />
                </>
              )} */}
              </div>
            )
          )}
        </div>
      </main>
    </div>
  );
}

function sortArticlesByDate(
  articles: Article[],
  ascending = false
): Article[] {
  return [...articles].sort((a, b) => {
    const dateA = new Date(a.date).getTime();
    const dateB = new Date(b.date).getTime();
    return ascending ? dateA - dateB : dateB - dateA;
  });
}

function sortArticlesByTitle(articles: Article[]): Article[] {
  return [...articles].sort((a, b) => a.title.localeCompare(b.title));
}

function sortArticlesBySource(articles: Article[]): Article[] {
  return [...articles].sort((a, b) =>
    a.source.localeCompare(b.source)
  );
}

function getSortedArticles(
  articles: Article[],
  sortBy: "date" | "title" | "source" | null
): Article[] {
  switch (sortBy) {
    case "date":
      return sortArticlesByDate(articles);
    case "title":
      return sortArticlesByTitle(articles);
    case "source":
      return sortArticlesBySource(articles);
    default:
      return articles;
  }
}

const MSNBC: FC = () => (
  <>
    <svg
      className="svg-logo msnbc"
      aria-labelledby="msnbc_logo"
      viewBox="0 0 200 29">
      <g clipPath="url(#clip0_1144_7992)">
        <path
          d="M34.2624 6.82166L27.3176 22.6825L25.3311 8.90051C25.0847 7.02185 28.2723 5.86694 28.2723 5.86694C27.9797 5.22019 26.9788 5.23559 26.9788 5.23559H24.8229C24.4842 1.84784 27.5639 -0.631369 30.8747 0.123174C34.1392 0.846919 35.3249 4.40405 34.2624 6.80627"
          fill="#6E55DC"></path>
        <path
          d="M21.3733 27.8256L7.83775 18.8019C4.38841 16.5075 0.985272 18.8481 0.261527 21.2657C-0.800992 24.8383 1.58583 27.8256 5.32774 27.8256H21.3733Z"
          fill="#FCCC12"></path>
        <path
          d="M23.1443 5.46658C23.6524 1.97105 20.5111 -0.631353 17.1079 0.138589C13.8434 0.862334 12.6577 4.41946 13.7202 6.82168L20.6651 22.6825L23.1443 5.45119V5.46658Z"
          fill="#EF1541"></path>
        <path
          d="M20.1108 25.2848L13.4431 10.1016C11.8879 6.57527 7.74558 6.1441 5.46655 8.20754C3.86508 9.67043 2.61777 13.6279 6.2057 16.0302L20.1108 25.3002V25.2848Z"
          fill="#FF7112"></path>
        <path
          d="M42.6702 27.8257C46.4121 27.8257 48.7989 24.8537 47.7364 21.2658C47.0127 18.8482 43.6095 16.4921 40.1602 18.802L26.6246 27.8257H42.6702Z"
          fill="#05AC3F"></path>
        <path
          d="M41.777 16.0302C45.3649 13.6279 44.1176 9.67043 42.5161 8.20754C40.2371 6.1441 36.0948 6.57527 34.5395 10.1016L27.8718 25.3002L41.777 16.0302Z"
          fill="#069DE0"></path>
        <path d="M74.6074 0.723755L66.7232 15.3834L58.8236 0.723755H52.4792V27.8257H58.4386V12.4115L64.8753 23.8528H68.571L75.0077 12.4115V27.8257H80.9671V0.723755H74.6074Z"></path>
        <path d="M196.258 19.033L196.104 18.8482L195.904 18.6172C193.225 20.8962 191.515 22.1897 187.65 22.1897H187.481C182.168 22.1897 178.873 18.0628 178.873 14.2439C178.873 9.85525 182.753 6.29812 187.512 6.29812C191.346 6.32892 193.379 8.39236 194.349 9.37789L194.503 9.53188L194.61 9.42408L194.626 9.40869L194.718 9.31629L194.888 9.1469L198.984 5.05082C198.491 4.55805 194.672 0 187.558 0C179.381 0 172.59 6.22113 172.544 14.2131C172.544 21.9741 179.073 28.5032 187.481 28.534C193.81 28.534 197.013 25.947 199.985 23.3908L196.243 19.033H196.258Z"></path>
        <path d="M170.049 19.2948C170.049 26.6708 164.151 27.8257 160.456 27.8257H144.703V0.708374H160.44C165.26 0.708374 169.125 3.44937 169.125 8.59258C169.125 11.1334 167.339 12.5347 165.969 13.2276C168.201 14.3517 170.049 16.0148 170.049 19.2948ZM150.447 5.80539V10.9332H159.732C161.272 10.9332 162.95 10.3018 162.95 8.39239C162.95 6.48293 161.641 5.80539 159.516 5.80539H150.447ZM163.92 19.2948C163.92 16.6924 161.749 16.0148 159.64 16.0148H150.447V22.4823H159.855C161.58 22.4823 163.92 21.8818 163.92 19.2794V19.2948Z"></path>
        <path d="M114.259 0.708374H120.619L133.708 18.2476V0.708374H139.667V27.8257H133.308L120.219 10.2556V27.8257H114.259V0.708374Z"></path>
        <path d="M105.02 12.5346C100.462 10.5944 92.3622 12.0727 92.4084 8.36156C92.4238 6.92947 94.518 5.69757 97.875 5.66677C101.648 5.63597 106.421 7.63782 106.421 7.63782L109.455 2.81799C109.455 2.81799 103.28 0 97.9828 0C89.883 0 86.0795 3.57253 86.0795 8.00739C86.0795 12.4423 88.6357 14.3825 90.0216 15.0601C94.518 17.2467 99.5688 16.6461 102.279 18.0166C105.251 19.4949 104.081 23.052 97.9828 22.5593C93.5017 22.1897 90.8531 21.2966 87.6347 19.3871L84.3086 24.0376C90.5759 27.9027 96.6277 28.5186 97.9828 28.534C102.71 28.5648 110.394 27.3021 110.286 19.5103C110.24 16.3382 108.7 14.0899 105.02 12.5346Z"></path>
      </g>
    </svg>
  </>
);

const Vox: FC = () => (
  <>
    <svg className="svg-logo vox" viewBox="0 0 120 58">
      <title>Vox</title>
      <desc>Vox logo</desc>
      <path d="M155-6.7h123.8v115H155z"></path>
      <path d="M55.1 77.5h1.7l.2-.8H35.6l-.2.8h3.1c2.7 0 4.9 1.9 4.9 5.6 0 2.1-.9 4.8-2.4 8.1l-13.9 30.7L23.7 82c-.3-3.1 1.3-4.5 4.8-4.5h2l.2-.8H.5l-.3.8h1.9c2.4 0 3.3 1.5 3.5 4.3l5.4 51.6h12.7L45 88.3c3.3-6.7 6.7-10.8 10.1-10.8zm-2.5 56.1c-1.9 0-3.1-.6-3.1-3.8 0-4 1.5-11.9 3.1-19.1.2 3.3 2.5 6.6 5.9 6.6.8 0 1.5-.1 2.2-.2-3.2 13.7-4.4 16.5-8.1 16.5zm60.6-27.1c4 0 6.6-3.3 6.6-7.1 0-3.2-2.3-5.6-5.6-5.6-5.9 0-8.7 4.7-13.6 13.3-1-5.4-3.5-12.4-9.7-12.4-7 0-15.1 10-22.5 16.2-3.4 2.9-7.1 4.7-10.1 4.7-3.1 0-4.9-3.1-4.9-8.6 2.2-9 3.3-11.3 6.7-11.3 2.3 0 3.3 1.3 3.3 4 0 2.9-.6 7.7-1.9 13.8 3.3-1 8.3-5.2 12.5-9.7-2.2-5.3-7-8.9-13.8-8.9-12.7 0-23.9 11.4-23.9 24.2 0 8.8 6.3 15.5 16.1 15.5 16.2 0 23-14 23-23.8 0-1.4-.1-2.4-.2-3.7 2.5-2.7 5.7-5.3 8.3-5.3 3 0 5.4 7.5 7.7 18.8-2.1 2.3-4.2 6.7-5.2 7.5-.4-4-3.1-6.5-6.6-6.5-4 0-6.7 3.8-6.7 7 0 3.6 2.5 6 5.8 6 6.9 0 8.8-6.5 13.1-12.3 1.3 6.2 4.4 12.3 9.7 12.3 6.3 0 12.1-5.4 15.1-9.2l-.6-.9c-1.9 1.9-3.8 3.1-6 3.1-3.9 0-6.7-8.4-8.8-18.6 1.3-1.7 3.3-6.1 4.7-7.7.9 1.8 2.9 5.2 7.5 5.2z"></path>
      <path d="M55.1.9h1.7l.2-.8H35.6l-.2.8h3.1c2.7 0 4.9 1.9 4.9 5.6 0 2.1-.9 4.8-2.4 8.1L27.1 45.3 23.7 5.4C23.4 2.3 25 .9 28.5.9h2l.2-.8H.5L.2.9h1.9c2.4 0 3.3 1.5 3.5 4.3L11 56.8h12.7L45 11.7C48.3 5 51.7.9 55.1.9zM52.6 57c-1.9 0-3.1-.6-3.1-3.8 0-4 1.5-11.9 3.1-19.1.2 3.3 2.5 6.6 5.9 6.6.8 0 1.5-.1 2.2-.2C57.5 54.2 56.3 57 52.6 57zm60.6-27.1c4 0 6.6-3.3 6.6-7.1 0-3.2-2.3-5.6-5.6-5.6-5.9 0-8.7 4.7-13.6 13.3-1-5.4-3.5-12.4-9.7-12.4-7 0-15.1 10-22.5 16.2C65 37.2 61.3 39 58.3 39c-3.1 0-4.9-3.1-4.9-8.6 2.2-9 3.3-11.3 6.7-11.3 2.3 0 3.3 1.3 3.3 4 0 2.9-.6 7.7-1.9 13.8 3.3-1 8.3-5.2 12.5-9.7-2.2-5.3-7-8.9-13.8-8.9-12.7 0-23.9 11.4-23.9 24.2 0 8.8 6.3 15.5 16.1 15.5 16.2 0 23-14 23-23.8 0-1.4-.1-2.4-.2-3.7 2.5-2.7 5.7-5.3 8.3-5.3 3 0 5.4 7.5 7.7 18.8-2.1 2.3-4.2 6.7-5.2 7.5-.4-4-3.1-6.5-6.6-6.5-4 0-6.7 3.8-6.7 7 0 3.6 2.5 6 5.8 6 6.9 0 8.8-6.5 13.1-12.3C92.9 51.9 96 58 101.3 58c6.3 0 12.1-5.4 15.1-9.2l-.6-.9c-1.9 1.9-3.8 3.1-6 3.1-3.9 0-6.7-8.4-8.8-18.6 1.3-1.7 3.3-6.1 4.7-7.7.9 1.8 2.9 5.2 7.5 5.2zm133.7-13.4h2.1l.2-1h-26l-.2 1h3.8c3.3 0 6 2.3 6 6.8 0 2.6-1.1 5.8-2.9 9.8L213 70.4 208.7 22c-.4-3.8 1.6-5.5 5.8-5.5h2.4l.2-1h-36.7l-.4 1h2.3c2.9 0 4 1.8 4.3 5.2l6.6 62.7h15.4l25.9-54.8c4.2-8.1 8.3-13.1 12.4-13.1z"></path>
    </svg>
  </>
);

const logos = {
  MSNBC: <MSNBC />,
  Vox: <Vox />,
} as const;
